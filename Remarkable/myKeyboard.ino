/* Seabird_pC08_20220321, with row0 not connected. The row0 here is row1 on PCB */
/*
KEY(0, 0, KEY_RESERVED),
  KEY(0, 1, KEY_RESERVED),
  KEY(0, 2, KEY_RESERVED),
  KEY(0, 3, KEY_RIGHT),
  KEY(0, 4, KEY_RESERVED),
  KEY(0, 5, KEY_RESERVED),
  KEY(0, 6, KEY_RESERVED),
  KEY(0, 7, KEY_N),
  KEY(0, 8, KEY_B),
  KEY(0, 9, KEY_V),
  KEY(0, 10, KEY_D),
  KEY(0, 11, KEY_X),
  KEY(0, 12, KEY_Z),
  KEY(0, 13, KEY_RESERVED),
  KEY(0, 14, KEY_LEFTSHIFT),
  KEY(1, 0, KEY_RESERVED),
  KEY(1, 1, KEY_RESERVED),
  KEY(1, 2, KEY_RESERVED),
  KEY(1, 3, KEY_RESERVED),
  KEY(1, 4, KEY_DOWN),
  KEY(1, 5, KEY_RESERVED),
  KEY(1, 6, KEY_RESERVED),
  KEY(1, 7, KEY_H),
  KEY(1, 8, KEY_G),
  KEY(1, 9, KEY_F),
  KEY(1, 10, KEY_C),
  KEY(1, 11, KEY_RESERVED),
  KEY(1, 12, KEY_RESERVED),
  KEY(1, 13, KEY_END),
  KEY(1, 14, KEY_RESERVED),
  KEY(2, 0, KEY_LEFTCTRL),
  KEY(2, 1, KEY_LEFTALT),
  KEY(2, 2, KEY_RESERVED),
  KEY(2, 3, KEY_BACKSPACE),
  KEY(2, 4, KEY_BACKSLASH),
  KEY(2, 5, KEY_LEFT),
  KEY(2, 6, KEY_ENTER),
  KEY(2, 7, KEY_7),
  KEY(2, 8, KEY_T),
  KEY(2, 9, KEY_E),
  KEY(2, 10, KEY_R),
  KEY(2, 11, KEY_W),
  KEY(2, 12, KEY_Q),
  KEY(2, 13, KEY_RESERVED),
  KEY(2, 14, KEY_RESERVED),
  KEY(3, 0, KEY_RESERVED),
  KEY(3, 1, KEY_RESERVED),
  KEY(3, 2, KEY_RESERVED),
  KEY(3, 3, KEY_EQUAL),
  KEY(3, 4, KEY_0),
  KEY(3, 5, KEY_I),
  KEY(3, 6, KEY_UP),
  KEY(3, 7, KEY_Y),
  KEY(3, 8, KEY_6),
  KEY(3, 9, KEY_5),
  KEY(3, 10, KEY_4),
  KEY(3, 11, KEY_3),
  KEY(3, 12, KEY_CAPSLOCK),
  KEY(3, 13, KEY_S),
  KEY(3, 14, KEY_A),
  KEY(4, 0, KEY_RESERVED),
  KEY(4, 1, KEY_RESERVED),
  KEY(4, 2, KEY_HOME),
  KEY(4, 3, KEY_P),
  KEY(4, 4, KEY_O),
  KEY(4, 5, KEY_K),
  KEY(4, 6, KEY_U),
  KEY(4, 7, KEY_8),
  KEY(4, 8, KEY_RESERVED),
  KEY(4, 9, KEY_RESERVED),
  KEY(4, 10, KEY_RESERVED),
  KEY(4, 11, KEY_2),
  KEY(4, 12, KEY_1),
  KEY(4, 13, KEY_RESERVED),
  KEY(4, 14, KEY_RESERVED),
  KEY(5, 0, KEY_RESERVED),
  KEY(5, 1, KEY_RESERVED),
  KEY(5, 2, KEY_RESERVED),
  KEY(5, 3, KEY_SEMICOLON),
  KEY(5, 4, KEY_L),
  KEY(5, 5, KEY_9),
  KEY(5, 6, KEY_J),
  KEY(5, 7, KEY_GRAVE),
  KEY(5, 8, KEY_RESERVED),
  KEY(5, 9, KEY_RESERVED),
  KEY(5, 10, KEY_RESERVED),
  KEY(5, 11, KEY_RESERVED),
  KEY(5, 12, KEY_TAB),
  KEY(5, 13, KEY_RESERVED),
  KEY(5, 14, KEY_RIGHTSHIFT),
  KEY(6, 0, KEY_RESERVED),
  KEY(6, 1, KEY_RIGHTALT),
  KEY(6, 2, KEY_SPACE),
  KEY(6, 3, KEY_SLASH),
  KEY(6, 4, KEY_DOT),
  KEY(6, 5, KEY_COMMA),
  KEY(6, 6, KEY_M),
  KEY(6, 7, KEY_APOSTROPHE),
  KEY(6, 8, KEY_RESERVED),
  KEY(6, 9, KEY_RESERVED),
  KEY(6, 10, KEY_RESERVED),
  KEY(6, 11, KEY_RESERVED),
  KEY(6, 12, KEY_RESERVED),
  KEY(6, 13, KEY_RESERVED),
  KEY(6, 14, KEY_RESERVED),
};
*/

const uint8_t kbd[256] =
{
  0x00,     //0
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,     //8
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,     //16
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //24
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //32
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //40
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,   //48
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //56
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,  

  0x00,   //64  @
   ((3<<1) | (14<<4) | 1),   //97 - a
  ((0<<1) | (8<<4) | 1),   //98 - b 
  ((1<<1) | (10<<4) | 1),   //99 - c
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //72
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,   //80
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //88
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //96 - grave
  ((3<<1) | (14<<4)),   //97 - a
  ((0<<1) | (8<<4)),   //98 - b 
  ((1<<1) | (10<<4)),   //99 - c
  ((2<<1) | (6<<4)),   //enter
  0x00,
  0x00,
  0x00,

  0x00,   //104
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,   //112
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,   //120
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,  

  0x00,   //128
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,  

    0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00
};
